import pandas as pd
import pyarrow as pa
from supabase import create_client, Client
from storages.base_storage import BaseStorage
import os
import logging

class SupabaseStorage(BaseStorage):
    NAME = 'SUPABASE_STORAGE'

    def __init__(self, app_name: str, config: dict) -> None:
        super().__init__(app_name, config)
        
        # Initialize Supabase credentials from config
        self._supabase_url = os.getenv('SUPABASE_URL')
        self._supabase_key = os.getenv('SUPABASE_KEY')
        self._table_name = config['table_name']

        # Create a Supabase client
        self._client: Client = create_client(self._supabase_url, self._supabase_key)

    def save(self, arrow_table: pa.Table):
        """Save Arrow table directly to the Supabase database using supabase-py."""
        
        # Convert the Arrow Table to a Pandas DataFrame
        df = arrow_table.to_pandas()
        
        # Ensure column names are lowercase to avoid case sensitivity issues
        df.columns = [col.lower() for col in df.columns]
        
        # Convert DataFrame rows to dictionaries for Supabase insertion
        data = df.to_dict(orient="records")

        try:
            # Insert data into the Supabase table
            response = self._client.table(self._table_name).insert(data).execute()

            if response.data:
                logging.info(f"Data successfully saved to Supabase table '{self._table_name}'")
            else:
                logging.error(f"Error inserting data into Supabase. Response: {response}")

        except Exception as e:
            logging.error(f"Error occurred while saving data to Supabase: {e}")
