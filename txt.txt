import logging
import pyarrow as pa
import pyarrow.json as pj
import pyarrow.csv as pv
import glob
import os
from extractors.base_extractor import BaseExtractor

class FileListExtractor(BaseExtractor):
    NAME = 'FILE_LIST_EXTRACTOR'

    def __init__(self , app_name: str , config: dict , transformer) -> None:
        super().__init__(app_name, transformer, config)
        self._file_directory = config.get('directory' , '')
        self._file_name_include = config.get('filters')['include']
        self._get_last_file = config.get('filters')['get_last']
        self._file_type = config.get('filters')['suffix']

    def _fetch(self):
        logging.info('Reading data from files...')

        file_pattern = os.path.join(self._file_directory, f'{self._file_name_include}_*{self._file_type}')

        file_list = glob.glob(file_pattern)

        if not file_list:
            logging.error(f'No files found with pattern : {file_pattern}')
            return None, [f'No files found with pattern : {file_pattern}']

        # Sort files to get last file if needed
        if self._get_last_file:
            file_list.sort(key=os.path.getmtime, reverse=True)
            file_list = [file_list[0]]

        table = [] 

        try:
            if self._file_type == '.json':
                table =[ pj.read_json(file) for file in file_list]
            elif self._file_type == '.csv':

                table = [pv.read_csv(file) for file in file_list]
            else:
                raise ValueError(f'Unsupported file type: {self._file_type}')

            logging.info(f'Successfully read data from {len(file_list)} file(s).')
   
            arrow_table = pa.concat_tables(table)

            return arrow_table, []
        
        except Exception as e:
            logging.error(f'Failed to read data from files. Error: {str(e)}')
            return None, [str(e)]

---------

C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl>python main.py --config file_config.yaml --platform pandas
2024-10-09 11:06:08,743 - root - INFO - Using TRANSFORMER_CHAIN ...
2024-10-09 11:06:08,743 - root - INFO - Initialized Chain Transformer.
2024-10-09 11:06:08,743 - root - INFO - Reading data from files...
2024-10-09 11:06:08,758 - root - ERROR - Failed to read data from files. Error: JSON parse error: Column() changed from object to array in row 0
