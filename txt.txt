import json
import os
import logging
import pyarrow as pa
from pyarrow import csv
from storages.base_storage import BaseStorage

class FileStorage(BaseStorage):
    NAME = 'FILE_STORAGE'

    def __init__(self, app_name: str, config: dict) -> None:
        super().__init__(app_name, config)
        self._directory = config.get('directory')
        self.output_file_name = config.get('file_name')
        self.output_file_type = config.get('file_type')

        #Create the directory if it doesn't exist
        output_dir = os.path.dirname(self._directory)
        if not os.path.exists(output_dir):
            os.makedirs(output_dir , exist_ok=True)


    def _save(self,data):
        # IF output file or file type not specified raise an error

        # if()

        output_file = os.path.join(os.path.dirname(self._directory), f'{self.output_file_name}.{self.output_file_type}')
        logging.info(f'saving data to {output_file}')

        file_exists = os.path.isfile(output_file)

        if (self.output_file_type.lower() == 'json'):
            data_dict = data.to_pylist()  # data.to_pydict --> convert to the ordered python dictionary
            # save the json data
            with open(output_file, 'w') as f:
                json.dump(data_dict, f, indent=4)
        elif (self.output_file_type.lower() == 'csv'):
            write_options = csv.WriteOptions(include_header=not file_exists)

            with open(output_file, 'ab' if file_exists else 'wb') as f:
                csv.write_csv(data , f, write_options=write_options)
        else:
            raise ValueError('Invalid data type or file type.')
        
        logging.info(f'Data saved successfully at {output_file}')
----------------

Traceback (most recent call last):
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\main.py", line 42, in <module>
    main()
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\main.py", line 39, in main
    initialize_configurations(config=config, platform=args.platform)
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\main.py", line 24, in initialize_configurations
    extractor.fetch()
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\extractors\base_extractor.py", line 13, in fetch
    self._transformer.transform(results)
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\transformers\base_transformer.py", line 12, in transform
    df = self._transform(data)
         ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\transformers\utils.py", line 29, in _transform
    data = transformer.transform(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\transformers\base_transformer.py", line 17, in transform
    self._storage.save(df)
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\storages\base_storage.py", line 9, in save
    self._save(data)
  File "C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl\storages\file_storage.py", line 42, in _save
    csv.write_csv(data , f, write_options=write_options)
  File "pyarrow\\_csv.pyx", line 1509, in pyarrow._csv.write_csv
  File "pyarrow\\error.pxi", line 91, in pyarrow.lib.check_status
pyarrow.lib.ArrowInvalid: Unsupported Type:struct<lat: double, lon: double>

C:\Users\jayakal\OneDrive - acuitykp\Documents\Projects\open_weather\Task_01_v4\etl>
